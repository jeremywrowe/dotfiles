HOME_PATH = ENV["HOME"]
BIN_PATH = File.join(HOME_PATH, "bin")
OH_MY_ZSH_PATH = File.join(HOME_PATH, ".oh-my-zsh")
VIM_VUNDLE_PATH = File.join(HOME_PATH, ".vim")

desc "Setup a new machine - install brew, bin, and dotfiles"
task :install => ['ohmyzsh:install', 'brew:packages', 'bin:install', 'dotfiles:install', 'vim:install']

# FILE TASK TRIGGERS

file OH_MY_ZSH_PATH do
  `sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"`
end

file VIM_VUNDLE_PATH do
  `git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim`
end

# TASKS

namespace :brew do
  desc "Install homebrew"
  task :install do
    if `which brew`.strip == ""
      `/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"`
    end
  end

  desc "Install homebrew packages"
  task :packages do
    `brew bundle`
  end
end

namespace :bin do
  desc "Install all personal binaries into ~/bin"
  task :install do
    ln_s "#{HOME_PATH}/.dotfiles/setup/bin", BIN_PATH unless File.exist?(BIN_PATH)
    `chmod a+x #{HOME_PATH}/bin`
  end
end

namespace :dotfiles do
  desc "Install dotfiles using rcup"
  task :install do
    `rcup -x setup`
  end
end

namespace :ohmyzsh do
  task :setup do
    `chsh -s /bin/zsh` unless ENV["SHELL"].include?("zsh")
  end

  desc "Install oh-my-zsh and set shell to zsh"
  task :install => [:setup, OH_MY_ZSH_PATH]
end

namespace :vim do
  desc "Install vundle and it's packages"
  task :install => [VIM_VUNDLE_PATH, :vundle]

  desc "Update vundle packages"
  task :vundle do
    `vim +BundleClean! +BundleInstall! +qa`
  end
end
